@page "/register"
@inject IAuthService AuthService


<h3>Register</h3>

<EditForm Model="newUser" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="newUser.Username" class="form-control" />
        <ValidationMessage For="@(() => newUser.Username)" />
    </div>
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="newUser.Email" class="form-control" />
        <ValidationMessage For="@(() => newUser.Email)" />
    </div>
    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" type="password" @bind-Value="newUser.Password" class="form-control" />
        <ValidationMessage For="@(() => newUser.Password)" />
    </div>
    <div class="mb-3">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="password" type="password" @bind-Value="newUser.ConfirmPassword" class="form-control" />
        <ValidationMessage For="@(() => newUser.ConfirmPassword)" />
    </div>
	<button type="submit" class="btn btn-primary mt-2">Register</button>
</EditForm>

    @code {
        AccountRegistrationRequest newUser = new AccountRegistrationRequest();

    async Task HandleRegistration()
    {
		Console.WriteLine($"Registering user: {newUser.Username}, Email: {newUser.Email}");
		await AuthService.Register(newUser);
	}
}
