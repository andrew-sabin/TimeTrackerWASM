@using System.Diagnostics.CodeAnalysis;
@using System.Linq.Expressions
@inherits InputBase<string>

<div>
	@if (!string.IsNullOrWhiteSpace(Label))
	{
		<label for="@Id" class="text-sm font-medium text-gray-700 mt-2">@Label</label>
	}
	<textarea id="@Id" @bind="@CurrentValue"
		class="mt-0.5 w-full rounded border-gray-300 shadow-sm sm:text-sm" />
	<ValidationMessage For="@ValidationFor" class="text-xl-start text-red-600 font-extrabold my-1" />
</div>

@code {
	[Parameter]
	public string? Id { get; set; }
	[Parameter]
	public string? Label { get; set; }
	[Parameter]
	public Expression<Func<string>>? ValidationFor { get; set; }

	protected override bool TryParseValueFromString(string? value, [MaybeNullWhen(false)] out string result, [NotNullWhen(false)] out string validationErrorMessage)
	{
		result = value ?? string.Empty;
		validationErrorMessage = string.Empty;
		return true;
	}
}
